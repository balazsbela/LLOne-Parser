PROGRAM DECLIST SYMBOL DECLARATION SIMPLETYPE TYPE ARRAY_DECLARATION COMPOUND_STATEMENT STATEMENT_LIST STATEMENT SIMPLE_STATEMENT ASSIGNMENT OPERATOR1 OPERATOR2 EXPRESSION TERM FACTOR IO_STATEMENT READ_STATEMENT WRITE_STATEMENT STRUCTURED_STATEMENT IF_STATEMENT WHILE_STATEMENT CONDITION RELATION    
identifier constant more when work isnot is bigger smaller samebigger samesmaller be message ask hi bye numb char + - * / / ( ) ; and or not [ ] < > stable boolean otherwise
PROGRAM
PROGRAM ->  DECLIST ; | DECLIST ; STATEMENT_LIST	
DECLIST -> DECLARATION | DECLARATION ; DECLIST
SYMBOL -> identifier | constant 
DECLARATION -> TYPE identifier | TYPE identifier ASSIGNMENT SYMBOL
SIMPLETYPE -> numb | char 
TYPE -> SIMPLETYPE | ARRAY_DECLARATION
ARRAY_DECLARATION -> more < SIMPLETYPE > [ constant ] identifier ;				
COMPOUND_STATEMENT -> hi STATEMENT_LIST bye
STATEMENT_LIST -> STATEMENT ; | STATEMENT ; STATEMENT_LIST
STATEMENT -> SIMPLE_STATEMENT | STRUCTURED_STATEMENT
SIMPLE_STATEMENT -> ASSIGNMENT | IO_STATEMENT
ASSIGNMENT -> identifier be EXPRESSION
OPERATOR1 -> + | - 
OPERATOR2 -> * | /
EXPRESSION -> EXPRESSION OPERATOR1 TERM | TERM
TERM -> TERM OPERATOR2 FACTOR | FACTOR
FACTOR -> ( EXPRESSION ) | identifier | constant			
IO_STATEMENT -> READ_STATEMENT | WRITE_STATEMENT
READ_STATEMENT -> ask identifier
WRITE_STATEMENT -> message SYMBOL | message EXPRESSION
STRUCTURED_STATEMENT -> COMPOUND_STATEMENT | IF_STATEMENT | WHILE_STATEMENT
IF_STATEMENT -> when CONDITION STATEMENT | when CONDITION STATEMENT otherwise STATEMENT 
WHILE_STATEMENT -> work CONDITION STATEMENT
CONDITION -> EXPRESSION RELATION EXPRESSION
RELATION -> bigger | smaller | samebigger | samesmaller | is | isnot