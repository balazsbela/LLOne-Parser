PROGRAM DECLIST SYMBOL DECLARATION SIMPLETYPE TYPE ARRAY_DECLARATION COMPOUND_STATEMENT STATEMENT_LIST STATEMENT SIMPLE_STATEMENT ASSIGNMENT OPERATOR1 OPERATOR2 EXPRESSION TERM FACTOR IO_STATEMENT READ_STATEMENT WRITE_STATEMENT STRUCTURED_STATEMENT IF_STATEMENT WHILE_STATEMENT CONDITION    
more when work isnot is bigger smaller samebigger samesmaller be message ask hi bye numb char + - * / / ( ) ; and or not [ ] < > stable boolean
PROGRAM
PROGRAM -> DECLIST ";" | DECLIST ";" STATEMENT			
DECLIST -> DECLARATION | DECLARATION ";" DECLIST
SYMBOL -> IDENTIFIER | NUMERIC_CONSTANT | CHARACTER | CONSTSTRING
DECLARATION -> TYPE IDENTIFIER | TYPE IDENTIFIER ASSIGNMENT SYMBOL
SIMPLETYPE -> numb | char 
TYPE -> SIMPLETYPE | ARRAY_DECLARATION
ARRAY_DECLARATION -> more < SIMPLETYPE > [ NUMBER ] IDENTIFIER ;				
COMPOUND_STATEMENT -> hi STMTLIST bye
STATEMENT_LIST -> STATEMENT ; | STATEMENT ; STATEMENT_LIST
STATEMENT -> SIMPLE_STATEMENT | STRUCTURED_STATEMENT
SIMPLE_STATEMENT -> ASSIGNMENT | IO_STATEMENT
ASSIGNMENT -> IDENTIFIER be EXPRESSION
OPERATOR1 -> + | - 
OPERATOR2 -> * | /
EXPRESSION -> EXPRESSION OPERATOR1 TERM | TERM
TERM -> TERM OPERATOR2 FACTOR | FACTOR
FACTOR -> ( EXPRESSION ) | IDENTIFIER | NUMERIC_CONSTANT			
IO_STATEMENT -> READ_STATEMENT | WRITE_STATEMENT
READ_STATEMENT -> ask IDENTIFIER
WRITE_STATEMENT -> message SYMBOL | message EXPRESSION
STRUCTURED_STATEMENT -> COMPOUND_STATEMENT | IF_STATEMENT | WHILE_STATEMENT
IF_STATEMENT -> when CONDITION STATEMENT | when CONDITION STATEMENT ELSE STATEMENT 
WHILE_STATEMENT -> work CONDITION STATEMENT
CONDITION -> EXPRESSION RELATION EXPRESSION