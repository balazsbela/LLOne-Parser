PROGRAM DECLIST ASSIGN SYMBOL IDENT OFFSET AUX1 AUX2 STMNT DECLARATION DEC SIMPLETYPE TYPE ARRAY_DECLARATION STRUCTURED_STATEMENT IF_STATEMENT WHILE_STATEMENT IF_ELSE_STATEMENT RELATION CONDITION COMPOUND_STATEMENT STATEMENT_LIST STATEMENT SIMPLE_STATEMENT ASSIGNMENT OPERATOR1 OPERATOR2 EXPRESSION TERM FACTOR IO_STATEMENT READ_STATEMENT WRITE_STATEMENT    
identifier constant more when work isnot is bigger smaller samebigger samesmaller be message ask hi bye numb char + - * / ( ) ; and or not [ ] < > stable boolean otherwise
PROGRAM
PROGRAM ->  DECLIST STMNT
DECLIST -> DECLARATION ; DEC
DEC -> DECLIST | E
SYMBOL -> identifier | constant
DECLARATION -> TYPE identifier ASSIGN
ASSIGN -> be EXPRESSION | E
SIMPLETYPE -> numb | char
TYPE -> SIMPLETYPE | ARRAY_DECLARATION
ARRAY_DECLARATION -> more < SIMPLETYPE > [ constant ]				
COMPOUND_STATEMENT -> hi STMNT bye
STATEMENT_LIST -> STATEMENT STMNT
STMNT -> STATEMENT_LIST | E 
STATEMENT -> SIMPLE_STATEMENT ; | STRUCTURED_STATEMENT
SIMPLE_STATEMENT -> ASSIGNMENT | IO_STATEMENT
ASSIGNMENT -> IDENT be EXPRESSION
IDENT -> identifier OFFSET
OFFSET -> [ SYMBOL ] | E
OPERATOR1 -> + | - 
OPERATOR2 -> * | /
EXPRESSION -> TERM AUX1
AUX1 -> OPERATOR1 EXPRESSION | E
TERM -> FACTOR AUX2
AUX2 -> OPERATOR2 TERM | E
FACTOR -> ( EXPRESSION ) | identifier | constant			
IO_STATEMENT -> READ_STATEMENT | WRITE_STATEMENT
READ_STATEMENT -> ask identifier
WRITE_STATEMENT -> message EXPRESSION
STRUCTURED_STATEMENT -> COMPOUND_STATEMENT | WHILE_STATEMENT | IF_STATEMENT
WHILE_STATEMENT -> work CONDITION STATEMENT 
CONDITION -> ( EXPRESSION RELATION EXPRESSION )
RELATION -> bigger | smaller | samebigger | samesmaller | is | isnot
IF_STATEMENT -> when CONDITION COMPOUND_STATEMENT IF_ELSE_STATEMENT
IF_ELSE_STATEMENT -> otherwise COMPOUND_STATEMENT | E
